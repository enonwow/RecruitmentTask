@page "/weather"
@using RecruitmentTask.Calculator.Models
@using RecruitmentTask.DataAccess.Abstractions
@* @attribute [StreamRendering] *@
@inject IDataHandler DataHandler
@rendermode InteractiveServer

@if (employees == null)
{
    <p><em>Wybierz plik</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Lp</th>
                <th>Imię</th>
                <th>Nazwisko</th>
                <th>Zarobki</th>
                <th>Poziom stanowiska</th>
                <th>Miejsce zmieszkania</th>
                @if (showNetSalary)
                {
                    <th>Zarobki netto</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var employee in employees)
            {
                <tr>
                    <td>@employee.Id</td>
                    <td>@employee.Name</td>
                    <td>@employee.Surname</td>
                    <td>@employee.Salary</td>
                    <td>@employee.JobLevel</td>
                    <td>@employee.City</td>
                    @if (showNetSalary)
                    {
                        <td>@employee.NetSalary</td>
                    }
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<EmployeeDTO>? employees;
    private bool showNetSalary = true;

    protected override async Task OnInitializedAsync()
    {    
        // employees = await DataHandler
        //     .GetEmployeesAsync(@"C:\Projects\RecruitmentTask\RecruitmentTask.Console\Files\zadanie_soft_dev_PxCW.csv");
    }
}
